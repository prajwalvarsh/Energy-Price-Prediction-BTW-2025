# =====================================================
# CONFIGURATION FILE â€” Energy Price Prediction (BTW)
# Supports: LSTM and XGBoost
# =====================================================

# -----------------------
# 1. Data Configuration
# -----------------------

data:
  raw_data_path: "data/raw/energy_data_2020_2024.csv"
  processed_data_path: "data/processed/processed_energy_data.csv"
  features: 
    - price
    - wind_generation
    - photovoltaic_generation
    - residual_load
    - consumption
    - other_generation
  target: "price"
  sequence_length: 24          # number of past hours used for prediction
  test_size: 0.2
  random_seed: 42
  scaler_type: "MinMaxScaler"  # or "StandardScaler"

# -----------------------
# 2. Model Configuration
# -----------------------

model:
  type: "LSTM"                 # choose: "LSTM" or "XGBoost"

# --- LSTM model parameters ---
LSTM:
  input_size: 6                # same as number of features
  hidden_size: 128
  num_layers: 2
  dropout: 0.2
  output_size: 1
  bidirectional: false

# --- XGBoost model parameters ---
XGBoost:
  n_estimators: 300
  learning_rate: 0.05
  max_depth: 6
  subsample: 0.8
  colsample_bytree: 0.8
  reg_lambda: 1.0
  reg_alpha: 0.0
  random_state: 42

# -----------------------
# 3. Training Configuration
# -----------------------

training:
  batch_size: 64               # used only for LSTM
  learning_rate: 0.001         # used only for LSTM
  num_epochs: 50
  optimizer: "Adam"
  loss_function: "MSELoss"
  scheduler_step_size: 10
  scheduler_gamma: 0.9
  early_stopping_patience: 5

# -----------------------
# 4. MLflow & Logging
# -----------------------

logging:
  experiment_name: "energy_price_prediction"
  tracking_uri: "experiments/mlruns"
  log_interval: 10
  save_best_model: true

# -----------------------
# 5. Output Paths
# -----------------------

output:
  model_dir: "experiments/results/models"
  plots_dir: "experiments/results/plots"
  metrics_file: "experiments/results/metrics.json"
